{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,uBAAwBC,SAASC,cAAc,SAC/CC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,OAAQJ,SAASC,cAAc,oBAKjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPT,EAAKC,uBAAuBgB,iBAAiB,UAgB7C,SAAkCC,GAChCA,EAAMC,iBAMN,IAJA,IAAIC,EAAkBC,OAAOrB,EAAKI,WAAWkB,OACzCC,EAAiBF,OAAOrB,EAAKK,UAAUiB,OACvCE,EAAcH,OAAOrB,EAAKM,OAAOgB,OAE5BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAGxClB,EAAckB,EAFKL,EAAkBG,EAAiBE,GAGrDC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  startCreatePromisesBtn: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.startCreatePromisesBtn.addEventListener('submit', onCreatePromisesBtnStart);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction onCreatePromisesBtnStart(event) {\n  event.preventDefault();\n\n  let firstDelayValue = Number(refs.firstDelay.value);\n  let delayStepValue = Number(refs.delayStep.value);\n  let amountValue = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    let promiseDelay = firstDelayValue + delayStepValue * i;\n\n    createPromise(i, promiseDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  } \n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","startCreatePromisesBtn","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelayValue","Number","value","delayStepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1e24c640.js.map"}